// Generated by CoffeeScript 1.3.3
(function() {
  var geoToGeoJson;

  exports.geoJsonToGeo = function(geoJson) {
    if (geoJson.geometry.type === 'MultiLineString') {
      throw 'Geometry type MultiLineString is not supported.';
    }
    return {
      type: geoJson.geometry.type,
      lnglats: geoJson.geometry.coordinates,
      meta: geoJson.properties
    };
  };

  exports.geoJsonMultiLineStringToGeos = function(geoJson) {
    var coordinates, _i, _len, _ref, _results;
    _ref = geoJson.geometry.coordinates;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      coordinates = _ref[_i];
      _results.push({
        type: 'LineString',
        lnglats: coordinates,
        meta: geoJson.properties
      });
    }
    return _results;
  };

  exports.geoToGeoJson = geoToGeoJson = function(geo) {
    return {
      type: 'Feature',
      geometry: {
        type: geo.type || 'Point',
        coordinates: geo.lnglats
      },
      properties: geo.meta
    };
  };

  exports.geosToGeoJson = function(geos) {
    var geo;
    return {
      type: 'FeatureCollection',
      features: (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = geos.length; _i < _len; _i++) {
          geo = geos[_i];
          _results.push(geoToGeoJson(geo));
        }
        return _results;
      })()
    };
  };

}).call(this);
